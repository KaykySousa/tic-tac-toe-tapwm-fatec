<main class="from-purple-900 to-purple-600 bg-gradient-to-br w-full min-h-screen">
	<div class="min-h-screen w-full max-w-lg mx-auto p-4 flex justify-center items-center flex-col animate-fade-in">
		<div class="w-full mb-16 flex flex-col justify-between gap-x-8 gap-y-2">

		</div>
		<section id="board" class="w-full grid grid-cols-3 gap-3">
			{{#each board as |value index|}}
			<button data-position="{{ index }}"
				class="bg-white rounded-lg aspect-square shadow-md transition-[transform,opacity,background] hover:-translate-y-1 disabled:bg-white/80 disabled:cursor-not-allowed hover:bg-white/80 text-purple-700 font-bold text-5xl"></button>
			{{/each}}
		</section>
	</div>
	<div id="modal"
		class="bg-black/60 inset-0 fixed z-50 flex-col justify-end items-center p-4 min-[448px]:justify-center hidden">
		<div class="bg-white shadow-md w-full max-w-md rounded-lg p-8 flex flex-col">
			<div class="text-purple-700 self-start">
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2"
					stroke="currentColor" class="size-6">
					<path stroke-linecap="round" stroke-linejoin="round"
						d="M5.25 8.25h15m-16.5 7.5h15m-1.8-13.5-3.9 19.5m-2.1-19.5-3.9 19.5" />
				</svg>
			</div>
			<h1 class="font-semibold text-lg text-purple-950 leading-normal mt-4">
				ParabÃ©ns, vocÃª venceu! ðŸŽ‰
			</h1>
			<a href="/"
				class="bg-purple-700 text-white flex rounded-md py-3 px-6 gap-2 font-medium mt-8 transition-colors shadow-md justify-center">
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6">
					<path
						d="M11.47 3.841a.75.75 0 0 1 1.06 0l8.69 8.69a.75.75 0 1 0 1.06-1.061l-8.689-8.69a2.25 2.25 0 0 0-3.182 0l-8.69 8.69a.75.75 0 1 0 1.061 1.06l8.69-8.689Z" />
					<path
						d="m12 5.432 8.159 8.159c.03.03.06.058.091.086v6.198c0 1.035-.84 1.875-1.875 1.875H15a.75.75 0 0 1-.75-.75v-4.5a.75.75 0 0 0-.75-.75h-3a.75.75 0 0 0-.75.75V21a.75.75 0 0 1-.75.75H5.625a1.875 1.875 0 0 1-1.875-1.875v-6.198a2.29 2.29 0 0 0 .091-.086L12 5.432Z" />
				</svg>
				Voltar
			</a>
		</div>
	</div>
</main>

<script type="module">
	import { db, auth } from "/js/firebase.js"
	import { doc, onSnapshot } from "https://www.gstatic.com/firebasejs/11.0.1/firebase-firestore.js"

	const board = document.getElementById('board');
	const buttons = board.querySelectorAll('button');
	const modal = document.getElementById('modal');
	const modalTitle = modal.querySelector("h1")

	const id = "{{ game.id }}"

	const unsubscribe = onSnapshot(doc(db, "games", id), (doc) => {
		const data = doc.data();

		const turnPlayerId = data.moves.length % 2 === 0 ? data.playerX.id : data.playerO.id

		if ((data.status === "x_winner" && data.playerX.id === auth.currentUser.uid) || (data.status === "o_winner" && data.playerO.id === auth.currentUser.uid)) {
			unsubscribe();
			modalTitle.innerHTML = "ParabÃ©ns, vocÃª venceu! ðŸŽ‰"
			modal.classList.toggle('hidden');
			modal.classList.toggle('flex');
		} else if ((data.status === "x_winner" && data.playerX.id !== auth.currentUser.uid) || (data.status === "o_winner" && data.playerO.id !== auth.currentUser.uid)) {
			unsubscribe();
			modalTitle.innerHTML = "VocÃª perdeu! ðŸ˜¢"
			modal.classList.toggle('hidden');
			modal.classList.toggle('flex');
		} else if (data.status === "draw") {
			unsubscribe();
			modalTitle.innerHTML = "Empate! ðŸ˜•"
			modal.classList.toggle('hidden');
			modal.classList.toggle('flex');
		} else if (data.status === "withdraw") {
			unsubscribe();
			modalTitle.innerHTML = "Partida abandonada! ðŸ˜¢"
			modal.classList.toggle('hidden');
			modal.classList.toggle('flex');
		}

		buttons.forEach((button) => {
			button.disabled = turnPlayerId !== auth.currentUser.uid
		})

		data.moves.forEach(({ playerId, position }) => {
			const button = buttons[position]
			button.innerHTML = playerId === data.playerX.id ? "X" : "O"
			button.disabled = true
		})
	});

	buttons.forEach((button) => {
		button.addEventListener('click', handleClick);
	});

	async function handleClick(event) {
		const button = event.target;
		const { position } = button.dataset;

		try {
			const res = await fetch(`/move/${id}`, {
				method: "POST",
				headers: {
					"Content-Type": "application/json",
				},
				body: JSON.stringify({ position }),
			});

			if (!res.ok) {
				throw new Error("Erro ao fazer a jogada.");
			}

		} catch (error) {
			alert(error.message);
			console.error(error);
		}

	}
</script>